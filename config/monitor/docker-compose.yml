version: '3.8'

services:
  consul:
    image: consul:1.15.2
    container_name: consul
    ports:
      - "8500:8500"  # Giao diện web của Consul
      - "8600:8600"  # Port DNS của Consul
    volumes:
      - ./consul/data:/consul/data
      - ./consul/logs:/consul/logs
      - ./consul/consul-config.json:/consul/consul-config.json
      - ./consul/loki-service.json:/consul/loki-service.json
      - ./consul/promtail-service.json:/consul/promtail-service.json
      - ./consul/my-service.json:/consul/my-service.json
      - ./consul/start-consul.sh:/consul/start-consul.sh
    entrypoint: [ "/consul/start-consul.sh" ]
    # command: ["consul", "agent", "-config-file=/consul/consul-config.json"]
    networks:
      - monitor-network
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.10
    container_name: loki
    ports:
      - "3100:3100"  # Cổng HTTP cho Loki
      - "9095:9095"  # Cổng gRPC cho Loki (nếu cần)
    volumes:
      - ./loki:/loki
      - ./loki:/logs
      - ./loki/loki-config.yaml:/loki/loki-config.yaml
    command: -config.expand-env=true -config.file=/loki/loki-config.yaml
    networks:
      - monitor-network
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.10
    container_name: promtail
    ports:
      - "9080:9080"  # HTTP port
      - "9096:9096"  # gRPC port
    volumes:
      - C:/Users/ZimJi/Desktop/microservice_springboot/logs:/logs
      - ./promtail/logs:/promtail/logs
      - ./promtail/promtail-config.yaml:/promtail/promtail-config.yaml
    command: -config.file=/promtail/promtail-config.yaml
    networks:
      - monitor-network
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/alertmanager/alertmanager.yml
      - ./alertmanager/logs:/alertmanager/logs
    networks:
      - monitor-network
    restart: unless-stopped

  redis_exporter:
    image: oliver006/redis_exporter:v1.62.0
    container_name: redis_exporter
    ports:
      - "9121:9121"
    volumes:
      - ./redis_exporter/logs:/redis_exporter_logs
    networks:
      - monitor-network
      - redis_redis-network
    command: >
      --redis.addr=redis://redis_6380:6379
      --redis.addr=redis://redis_6381:6379
      --redis.addr=redis://redis_6382:6379
      --redis.addr=redis://redis_6383:6379
      --redis.addr=redis://redis_6384:6379
      --redis.addr=redis://redis_6385:6379
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.53.2
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/prometheus/alert.rules.yml
      - ./prometheus/logs:/prometheus/logs
    networks:
      - monitor-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:11.1.1
    container_name: grafana
    ports:
      - "3000:3000" # Display Port
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/logs:/var/log/grafana
      # - ./grafana/grafana-config.yaml:/etc/grafana/grafana.ini
    networks:
      - monitor-network
    restart: unless-stopped

networks:
  monitor-network:
    name: monitor-network
    driver: bridge
  redis-network:
    name: redis-network
    external: true
