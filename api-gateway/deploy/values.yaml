namespace: microservice-springboot
imageDomain: hieuboyfc

application:
  instance: zimji
  files:
    ConfigMap:
      api-gateway:
        - key: application.yml
          path: config/application.yaml
          mountPath: /config/application.yaml
          subPath: application.yml

container:
  ports:
    - name: http-1997
      port: 1997
      protocol: TCP
  replicaCount: 1 # Số lượng pod triển khai
  image:
    repository: api-gateway
    pullPolicy: IfNotPresent # Always
    tag: "1.0.0"
  livenessProbe: |
    failureThreshold: 3
    initialDelaySeconds: {{ .Values.container.health.check }}
    periodSeconds: 2
    successThreshold: 1
    tcpSocket:
      port: {{ .Values.container.health.port }}   
    timeoutSeconds: 2
  readinessProbe: |
    failureThreshold: 3
    initialDelaySeconds: {{ .Values.container.health.check }}
    periodSeconds: 2
    successThreshold: 2
    tcpSocket:
      port: {{ .Values.container.health.port }}   
    timeoutSeconds: 2
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1"
  env: {}
  envFrom:
    - configMapRef:
        name: generic-config
    - secretRef:
        name: db-config
  health:
    check: 30
    port: 1997

service:
  type: ClusterIP
  cluster:
    - name: http-1997
      protocol: TCP
      port: 1997
      target: 1997

hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 75
  targetMemoryUtilizationPercentage: 90

database:
  name: HieuBoy
  address: localhost
  port: 5432
  schema: api-gateway
  username: zimji
  password: dmlwLmhpZXVib3k

ingress:
  enabled: true
  className: "nginx"
  host: hieuboy-zimji.com
  nginx:
    image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:latest
    rewriteTarget: /
  tls: false

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 75
  targetMemoryUtilizationPercentage: 90

podAntiAffinity:
  enabled: true

nodeSelector: {}

tolerations:
  - key: "key"
    operator: "Exists"
    effect: "NoSchedule"

affinity:
  podAntiAffinity:
    preferred: true