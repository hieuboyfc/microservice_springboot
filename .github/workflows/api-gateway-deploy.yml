name: CI/CD Deploy to Kubernetes (api-gateway)

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'The service to deploy'
        required: true
        default: 'api-gateway'
  push:
    branches:
      - dev
      - qas
      - prod
  pull_request:
    branches:
      - dev
      - qas
      - prod

env:
  APP_SERVICE: api-gateway
  IMAGE_TAG: '1.0.0'  # Example static tag or use ${{ github.sha }}
  REGISTRY: ${{ secrets.REGISTRY }}
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  ENVIRONMENT: ${{ github.ref == 'refs/heads/prod' && 'prod' || (github.ref == 'refs/heads/qas' && 'qas' || 'dev') }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: 'v0.11.2'

      - name: Change directory to ${{ env.APP_SERVICE }}
        run: cd ${{ env.APP_SERVICE }} || exit 1 # Ensure directory exists

      - name: Make gradlew executable
        run: chmod +x ${{ env.APP_SERVICE }}/gradlew

      - name: Determine changed services
        id: changed-services
        run: |
          PREVIOUS_SHA=$(git rev-parse HEAD^ || echo "No previous commit")
          changes=$(git diff --name-only $PREVIOUS_SHA HEAD || true)
          echo "Changed files:"
          echo "$changes"
          CHANGED_SERVICES=""
          if echo "$changes" | grep -q '^${{ env.APP_SERVICE }}/'; then
            CHANGED_SERVICES="${{ env.APP_SERVICE }}"
          fi
          echo "CHANGED_SERVICES=$CHANGED_SERVICES" >> $GITHUB_ENV

      - name: Debug CHANGED_FILES
        run: |
          echo "Changed services: $CHANGED_SERVICES"

      - name: Login to Docker Hub
        run: echo "${{ env.DOCKER_PASSWORD }}" | docker login ${{ env.DOCKER_REGISTRY }} -u "${{ env.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker images
        if: env.CHANGED_SERVICES == env.APP_SERVICE
        run: |
          echo "Building gradle ${{ env.APP_SERVICE }}"
          cd ${{ env.APP_SERVICE }} || exit 1 # Ensure directory exists
          
          # Run Gradle build
          ./gradlew build || exit 1

          # Verify if JAR exists
          ls -l build/libs/
          
          echo "Building and pushing docker ${{ env.APP_SERVICE }}"
          echo REGISTRY: ${{ env.REGISTRY }}, ENVIRONMENT: ${{ env.ENVIRONMENT }}, IMAGE_TAG: ${{ env.IMAGE_TAG }}
          
          # Build Docker image
          docker build -t ${{ env.REGISTRY }}/${{ env.APP_SERVICE }}-${{ env.ENVIRONMENT }}:${{ env.IMAGE_TAG }} -f Dockerfile .
          
          # Push Docker image
          docker push ${{ env.REGISTRY }}/${{ env.APP_SERVICE }}-${{ env.ENVIRONMENT }}:${{ env.IMAGE_TAG }}
          
          # List Docker images
          docker images
