name: CI/CD Deploy to Kubernetes (api-gateway)

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'The service to deploy'
        required: true
        default: 'api-gateway'
  push:
    branches:
      - dev
      - qas
      - prod
  pull_request:
    branches:
      - dev
      - qas
      - prod

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: List files in root directory
        run: |
          echo "Root directory contents:"
          ls -la

      - name: List files in api-gateway directory
        run: |
          echo "Contents of api-gateway directory:"
          ls -la api-gateway

      - name: Make gradlew executable for api-gateway
        run: chmod +x ./api-gateway/gradlew
        if: contains(github.event.head_commit.message, 'api-gateway')

      - name: Determine changed services
        id: changed-services
        run: |
          PREVIOUS_SHA=$(git rev-parse HEAD^ || echo "No previous commit")
          changes=$(git diff --name-only $PREVIOUS_SHA HEAD || true)
          echo "Changed files:"
          echo "$changes"
          CHANGED_SERVICES=""
          if echo "$changes" | grep -q '^api-gateway/'; then
            CHANGED_SERVICES="api-gateway"
          fi
          echo "CHANGED_SERVICES=$CHANGED_SERVICES" >> $GITHUB_ENV

      - name: Debug CHANGED_FILES
        run: |
          echo "Changed services: $CHANGED_SERVICES"

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ secrets.DOCKER_REGISTRY }} -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker images
        env:
          IMAGE_TAG: '1.0.0' # Example static tag or use ${{ github.sha }}
          ENVIRONMENT: ${{ github.ref == 'refs/heads/prod' && 'prod' || (github.ref == 'refs/heads/qas' && 'qas' || 'dev') }}
        run: |
          # Build and push Docker image for api-gateway if there are changes
          if echo "$CHANGED_SERVICES" | grep -q 'api-gateway'; then
            echo "Building gradle api-gateway"
            cd api-gateway || exit 1 # Ensure directory exists
            ./gradlew build
            echo "Building and pushing docker api-gateway"
            docker build -t ${{ secrets.REGISTRY }}/api-gateway-${{ env.ENVIRONMENT }}:${{ env.IMAGE_TAG }} ./microservice_springboot/api-gateway
            docker push ${{ secrets.REGISTRY }}/api-gateway-${{ env.ENVIRONMENT }}:${{ env.IMAGE_TAG }}
            docker images
          fi

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set up Kubernetes CLI
        uses: Azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: 'latest'

      - name: Determine changed services
        id: changed-services
        run: |
          PREVIOUS_SHA=$(git rev-parse HEAD^ || echo "No previous commit")
          changes=$(git diff --name-only $PREVIOUS_SHA HEAD || true)
          echo "Changed files:"
          echo "$changes"
          CHANGED_SERVICES=""
          if echo "$changes" | grep -q '^api-gateway/'; then
            CHANGED_SERVICES="api-gateway"
          fi
          echo "CHANGED_SERVICES=$CHANGED_SERVICES" >> $GITHUB_ENV

      - name: Debug CHANGED_FILES
        run: |
          echo "Changed services: $CHANGED_SERVICES"

      - name: Deploy to Kubernetes
        env:
          IMAGE_TAG: '1.0.0' # Example static tag or use ${{ github.sha }}
          ENVIRONMENT: ${{ github.ref == 'refs/heads/prod' && 'prod' || (github.ref == 'refs/heads/qas' && 'qas' || 'dev') }}
        run: |
          # Deploy api-gateway if there are changes
          if echo "$CHANGED_SERVICES" | grep -q 'api-gateway'; then
            echo "Deploying api-gateway to $ENVIRONMENT environment"
            helm upgrade --install api-gateway ./microservice_springboot/api-gateway/k8s \
              --namespace ${{ secrets.KUBE_NAMESPACE }} \
              --values ./microservice_springboot/api-gateway/k8s/values.yaml \
              --values ./microservice_springboot/api-gateway/k8s/values-${env.ENVIRONMENT}.yaml \
              --set image.tag=${env.IMAGE_TAG}
          fi

      - name: Check deployment status
        run: |
          if echo "$CHANGED_SERVICES" | grep -q 'api-gateway'; then
            kubectl rollout status deployment/api-gateway --namespace=${{ secrets.KUBE_NAMESPACE }} || true
          fi

# REGISTRY: Địa chỉ Docker registry (ví dụ: docker.io/your-username).
# KUBE_CLUSTER_NAME: Tên cluster Kubernetes.
# KUBE_SERVER: Địa chỉ API server của Kubernetes.
# KUBE_CA_CERT: Chứng chỉ CA của Kubernetes (base64 encoded).
# KUBE_USER: Tên người dùng Kubernetes.
# KUBE_TOKEN: Token người dùng Kubernetes.
# KUBE_CONTEXT: Tên context Kubernetes.
# KUBE_NAMESPACE: Namespace Kubernetes để triển khai ứng dụng.