name: CI/CD Deploy to Kubernetes

on:
  push:
    branches:
      - dev
      - qas
      - prod
  pull_request:
    branches:
      - dev
      - qas
      - prod

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: List files
        run: ls -la

      - name: Make gradlew executable for api-gateway
        run: chmod +x ./microservice_springboot/api-gateway/gradlew
        if: contains(github.event.head_commit.message, 'api-gateway')

      - name: Make gradlew executable for auth-service
        run: chmod +x ./microservice_springboot/auth-service/gradlew
        if: contains(github.event.head_commit.message, 'auth-service')

      - name: Build and push Docker images
        env:
          ENVIRONMENT: ${{ github.ref == 'refs/heads/prod' && 'prod' || (github.ref == 'refs/heads/qas' && 'qas' || 'dev') }}
        run: |
          # Check which directories have changes
          changes=$(git diff --name-only HEAD^ HEAD | grep 'microservice_springboot/')

          # Build and push Docker image for api-gateway if there are changes
          if echo "$changes" | grep -q 'api-gateway'; then
            cd microservice_springboot/api-gateway
            ./gradlew build
            docker build -t ${{ secrets.REGISTRY }}/api-gateway-${{ env.ENVIRONMENT }}:${{ github.sha }} ./microservice_springboot/api-gateway
            docker push ${{ secrets.REGISTRY }}/api-gateway-${{ env.ENVIRONMENT }}:${{ github.sha }}
          fi
          
          # Build and push Docker image for auth-service if there are changes
          if echo "$changes" | grep -q 'auth-service'; then
            cd microservice_springboot/auth-service
            ./gradlew build
            docker build -t ${{ secrets.REGISTRY }}/auth-service-${{ env.ENVIRONMENT }}:${{ github.sha }} ./microservice_springboot/auth-service
            docker push ${{ secrets.REGISTRY }}/auth-service-${{ env.ENVIRONMENT }}:${{ github.sha }}
          fi

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Kubernetes CLI
        uses: Azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.9.4' # Thay đổi theo yêu cầu

      - name: Configure Kubernetes access
        env:
          KUBE_CLUSTER_NAME: ${{ secrets.KUBE_CLUSTER_NAME }}
          KUBE_SERVER: ${{ secrets.KUBE_SERVER }}
          KUBE_CA_CERT: ${{ secrets.KUBE_CA_CERT }}
          KUBE_USER: ${{ secrets.KUBE_USER }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        run: |
          kubectl config set-cluster $KUBE_CLUSTER_NAME --server=$KUBE_SERVER --certificate-authority=<(echo $KUBE_CA_CERT | base64 -d)
          kubectl config set-credentials $KUBE_USER --token=$KUBE_TOKEN
          kubectl config set-context $KUBE_CLUSTER_NAME --cluster=$KUBE_CLUSTER_NAME --user=$KUBE_USER
          kubectl config use-context $KUBE_CLUSTER_NAME

      - name: Deploy to Kubernetes
        env:
          IMAGE_TAG: ${{ github.sha }}
          ENVIRONMENT: ${{ github.ref == 'refs/heads/prod' && 'prod' || (github.ref == 'refs/heads/qas' && 'qas' || 'dev') }}
        run: |
          # Deploy api-gateway if there are changes
          if git diff --name-only HEAD^ HEAD | grep -q 'api-gateway'; then
            echo "Deploying api-gateway to $ENVIRONMENT environment"
            helm upgrade --install api-gateway ./microservice_springboot/api-gateway/k8s \
              --namespace ${{ secrets.KUBE_NAMESPACE }} \
              --values ./microservice_springboot/api-gateway/k8s/values.yaml \
              --values ./microservice_springboot/api-gateway/k8s/values-${ENVIRONMENT}.yaml \
              --set image.tag=${IMAGE_TAG}
          fi

          # Deploy auth-service if there are changes
          if git diff --name-only HEAD^ HEAD | grep -q 'auth-service'; then
            echo "Deploying auth-service to $ENVIRONMENT environment"
            helm upgrade --install auth-service ./microservice_springboot/auth-service/k8s \
              --namespace ${{ secrets.KUBE_NAMESPACE }} \
              --values ./microservice_springboot/auth-service/k8s/values.yaml \
              --values ./microservice_springboot/auth-service/k8s/values-${ENVIRONMENT}.yaml \
              --set image.tag=${IMAGE_TAG}

      - name: Check deployment status
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q 'api-gateway'; then
            kubectl rollout status deployment/api-gateway --namespace=${{ secrets.KUBE_NAMESPACE }} || true
          fi
          if git diff --name-only HEAD^ HEAD | grep -q 'auth-service'; then
            kubectl rollout status deployment/auth-service --namespace=${{ secrets.KUBE_NAMESPACE }} || true
          fi

# REGISTRY: Địa chỉ Docker registry (ví dụ: docker.io/your-username).
# KUBE_CLUSTER_NAME: Tên cluster Kubernetes.
# KUBE_SERVER: Địa chỉ API server của Kubernetes.
# KUBE_CA_CERT: Chứng chỉ CA của Kubernetes (base64 encoded).
# KUBE_USER: Tên người dùng Kubernetes.
# KUBE_TOKEN: Token người dùng Kubernetes.
# KUBE_CONTEXT: Tên context Kubernetes.
# KUBE_NAMESPACE: Namespace Kubernetes để triển khai ứng dụng.